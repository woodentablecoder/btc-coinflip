# Bitcoin Coinflip Application Structure

## Frontend Structure

### Core Components
- **App.jsx**: Main application component that manages authentication state, user balances, and modal displays. Serves as the central hub coordinating all other components.
- **Auth.jsx**: Handles user authentication including login, registration, and session management. Connects to Supabase auth.
- **Header.jsx**: Navigation header component showing user information, balance, and app controls.
- **GameInterface.jsx**: Main gameplay interface where users can see, create, and join games. Displays active games and game history.

### Modal Components
- **CoinflipModal.jsx**: Modal that displays the animation and results of coinflip games.
- **DepositModal.jsx**: Interface for users to deposit Bitcoin into their account.
- **WithdrawModal.jsx**: Interface for users to withdraw Bitcoin from their account.
- **Debug.jsx**: Development tool for debugging application state and interactions.

### Utilities
- **supabase.js**: Utility for initializing and managing Supabase client connection.

### Styling
- **index.css**: Global CSS styles, utilizing Tailwind CSS framework.
- **tailwind.config.js**: Tailwind CSS configuration for styling customization.
- **postcss.config.js**: PostCSS configuration for processing CSS.

## Backend Structure (Supabase)

### Database Tables
- **users**: Stores user information including email, BTC address, and balance.
- **games**: Tracks game data including participants, wager amounts, status, and winners.
- **transactions**: Records all financial transactions including deposits, withdrawals, wagers, and winnings.

### Database Functions
- **update_balance**: Function to update user balances and record corresponding transactions.

### Security
- Row Level Security (RLS) policies for users, games, and transactions tables to ensure proper access control.

## Configuration Files
- **.env**: Environment variables including Supabase URL and API keys.
- **vite.config.js**: Configuration for the Vite build tool.
- **package.json**: Project dependencies and scripts.

## Entry Points
- **index.html**: Main HTML entry point for the application.
- **main.jsx**: JavaScript entry point that renders the React application.

## Development and Planning
- **plan.txt** and **plan2.txt**: Planning documents for application development.
- **README.md**: Documentation about the project setup and functionality. 